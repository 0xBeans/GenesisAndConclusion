Compiled 19 Solidity files successfully

  Mirakai Full integration tests
HERE data:application/json;base64,
    ✓ should mint-drip-reroll-summon (14272ms)

·--------------------------------------|---------------------------|-------------|------------------------------------·
|         [90mSolc version: 0.8.13[39m         ·  [90mOptimizer enabled: true[39m  ·  [90mRuns: 200[39m  ·  [90mBlock limit: 100000000429720 gas[39m  │
·······································|···························|·············|·····································
|  [32m[1mMethods[22m[39m                                                                                                            │
·······················|···············|·············|·············|·············|··················|··················
|  [1mContract[22m            ·  [1mMethod[22m       ·  [32mMin[39m        ·  [32mMax[39m        ·  [32mAvg[39m        ·  [1m# calls[22m         ·  [1musd (avg)[22m      │
·······················|···············|·············|·············|·············|··················|··················
|  [90mConclusion[39m          ·  mint         ·          -  ·          -  ·     134611  ·               [90m1[39m  ·              [32m[90m-[32m[39m  │
·······················|···············|·············|·············|·············|··················|··················
|  [90mConclusion[39m          ·  setRenderer  ·          -  ·          -  ·      46200  ·               [90m1[39m  ·              [32m[90m-[32m[39m  │
·······················|···············|·············|·············|·············|··················|··················
|  [90mConclusionRenderer[39m  ·  saveFile     ·    [36m4668649[39m  ·    [31m5177696[39m  ·    5092747  ·               [90m6[39m  ·              [32m[90m-[32m[39m  │
·······················|···············|·············|·············|·············|··················|··················
|  [32m[1mDeployments[22m[39m                         ·                                         ·  [1m% of limit[22m      ·                 │
·······································|·············|·············|·············|··················|··················
|  Conclusion                          ·          -  ·          -  ·    1289784  ·             [90m0 %[39m  ·              [32m[90m-[32m[39m  │
·······································|·············|·············|·············|··················|··················
|  ConclusionRenderer                  ·          -  ·          -  ·    1045602  ·             [90m0 %[39m  ·              [32m[90m-[32m[39m  │
·--------------------------------------|-------------|-------------|-------------|------------------|-----------------·

  1 passing (16s)

