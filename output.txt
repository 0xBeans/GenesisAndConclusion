Compiled 24 Solidity files successfully

  2Blocks
HERE data:application/json;base64,
    ✓ should mint-drip-reroll-summon (14888ms)

·---------------------------------------|---------------------------|-------------|------------------------------------·
|         [90mSolc version: 0.8.13[39m          ·  [90mOptimizer enabled: true[39m  ·  [90mRuns: 200[39m  ·  [90mBlock limit: 100000000429720 gas[39m  │
········································|···························|·············|·····································
|  [32m[1mMethods[22m[39m                                                                                                             │
····················|···················|·············|·············|·············|··················|··················
|  [1mContract[22m         ·  [1mMethod[22m           ·  [32mMin[39m        ·  [32mMax[39m        ·  [32mAvg[39m        ·  [1m# calls[22m         ·  [1musd (avg)[22m      │
····················|···················|·············|·············|·············|··················|··················
|  [90mGenesis[39m          ·  mint             ·          -  ·          -  ·     134661  ·               [90m1[39m  ·              [32m[90m-[32m[39m  │
····················|···················|·············|·············|·············|··················|··················
|  [90mGenesis[39m          ·  setRenderer      ·          -  ·          -  ·      46200  ·               [90m1[39m  ·              [32m[90m-[32m[39m  │
····················|···················|·············|·············|·············|··················|··················
|  [90mGenesisRenderer[39m  ·  saveFile         ·          -  ·          -  ·    4074201  ·               [90m1[39m  ·              [32m[90m-[32m[39m  │
····················|···················|·············|·············|·············|··················|··················
|  [90mGenesisRenderer[39m  ·  setFontContract  ·          -  ·          -  ·      46076  ·               [90m1[39m  ·              [32m[90m-[32m[39m  │
····················|···················|·············|·············|·············|··················|··················
|  [90mSpaceFont[39m        ·  saveFile         ·    [36m5177472[39m  ·    [31m5177696[39m  ·    5177566  ·               [90m5[39m  ·              [32m[90m-[32m[39m  │
····················|···················|·············|·············|·············|··················|··················
|  [32m[1mDeployments[22m[39m                          ·                                         ·  [1m% of limit[22m      ·                 │
········································|·············|·············|·············|··················|··················
|  Genesis                              ·          -  ·          -  ·    1312622  ·             [90m0 %[39m  ·              [32m[90m-[32m[39m  │
········································|·············|·············|·············|··················|··················
|  GenesisRenderer                      ·          -  ·          -  ·     848392  ·             [90m0 %[39m  ·              [32m[90m-[32m[39m  │
········································|·············|·············|·············|··················|··················
|  SpaceFont                            ·          -  ·          -  ·     532956  ·             [90m0 %[39m  ·              [32m[90m-[32m[39m  │
·---------------------------------------|-------------|-------------|-------------|------------------|-----------------·

  1 passing (16s)

